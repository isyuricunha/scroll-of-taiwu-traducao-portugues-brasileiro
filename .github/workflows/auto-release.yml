name: deploy release and notes / change logs
'on':
  push:
    branches: main
    tags:
      - '[0-9]+.*'
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - 3.11
    steps:
      - uses: actions/checkout@v3
      - name: Configurar usuário git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
      - name: Versão minor para cada merge (dry-run)
        id: taggerDryRun
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        with:
          with_v: true
          dry_run: true
          default_bump: patch
          branch_history: compare
      - name: Exibir próxima tag
        run: |
          echo "Próxima versão: ${{ steps.taggerDryRun.outputs.new_tag }}"
      - name: Exibir tag atual
        run: |
          echo "Tag atual: ${{ steps.taggerDryRun.outputs.tag }}"
      - name: Exibir incremento de versão
        run: |
          echo "Incremento de versão: ${{ steps.taggerDryRun.outputs.part }}"
      - name: Versão minor para cada merge (final)
        id: taggerFinal
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        with:
          with_v: true
          default_bump: patch
          branch_history: compare
      - name: Gerar notas de release
        id: release_notes
        run: >
          notes=$(git log --oneline --decorate --no-merges "${{
          steps.taggerFinal.outputs.tag }}..${{
          steps.taggerFinal.outputs.new_tag }}")

          echo "notes=${notes}" >> $GITHUB_ENV
      - name: Criar tag e release no GitHub
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        with:
          tag_name: '${{ steps.taggerFinal.outputs.new_tag }}'
          release_name: 'Release ${{ steps.taggerFinal.outputs.new_tag }}'
          body: '${{ env.notes }}'
          draft: false
      - name: Gerar changelog automático e criar release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: '${{ secrets.GITHUB_TOKEN }}'
          automatic_release_tag: '${{ steps.taggerFinal.outputs.new_tag }}'
          prerelease: false
          title: |
            Última versão: ${{ steps.taggerFinal.outputs.new_tag }}
          files: |
            *
